---
config:
  theme: forest
  themeVariables:
    primaryColor: '#5D8AA8'
    primaryTextColor: '#fff'
    primaryBorderColor: '#5D8AA8'
    lineColor: '#F8B229'
    secondaryColor: '#006400'
    tertiaryColor: '#fff'
  flowchart:
    htmlLabels: true
    curve: basis
    rankSpacing: 100
    nodeSpacing: 50
    padding: 15
  sequence:
    mirrorActors: false
    bottomMarginAdj: 1
    noteAlign: right
  look: classic
---
flowchart TD
    subgraph DataSources["🌐 Data Sources Layer"]
        StockExchanges["📊 Stock Exchanges<br/><small>Real-time market feeds</small>"]
        SocialMedia["🔄 Social Media APIs<br/><small>Twitter, Reddit streams</small>"]
        NewsAPIs["📰 Financial News APIs<br/><small>Bloomberg, Reuters</small>"]
    end
    subgraph DataIngestion["📥 Data Ingestion Layer"]
        KafkaConnectMarket["🔄 Market Data Connector<br/><small>Kafka Connect</small>"]
        KafkaConnectSocial["🔄 Social/News Connector<br/><small>Kafka Connect</small>"]
        KafkaTopicMarket["📊 Kafka Topics<br/><small>Market Data</small>"]
        KafkaTopicSocial["💬 Kafka Topics<br/><small>Social/News</small>"]
    end
    subgraph DataValidation["✅ Data Validation Layer"]
        MarketValidator["🔍 Market Data Validator<br/><small>Schema, range checks</small>"]
        ContentValidator["🔍 Content Validator<br/><small>Relevance, spam filtering</small>"]
        ValidDataMarket["✓ Valid Market Data<br/><small>Clean, structured data</small>"]
        ValidDataSocial["✓ Valid Social Data<br/><small>Filtered content</small>"]
        ErrorHandler["⚠️ Error Handler<br/><small>Data recovery, logging</small>"]
    end
    subgraph ProcessingLayer["⚙️ Processing Layer"]
        SparkMarket["⚡ Spark Streaming<br/><small>Market Analysis</small>"]
        SparkSocial["⚡ Spark Streaming<br/><small>Text Processing</small>"]
        FeatureEngMarket["🔧 Feature Engineering<br/><small>Technical Indicators</small>"]
        FeatureEngSocial["🔧 NLP Feature Engineering<br/><small>Text vectorization</small>"]
        DLPrediction["🧠 Deep Learning<br/><small>Price Prediction</small>"]
        SentimentAnalysis["😊 Sentiment Analysis<br/><small>Opinion mining</small>"]
    end
    subgraph FeatureStore["💾 Feature Store Layer"]
        Redis[("📊 Redis<br/><small>Online Features</small>")]
        Cassandra[("🗄️ Cassandra<br/><small>Historical Features</small>")]
    end
    subgraph SignalIntegration["🔄 Signal Integration Layer"]
        AggregationService["🧩 Aggregation Service<br/><small>Final Predictions</small>"]
    end
    subgraph APILayer["🔌 API Layer"]
        FastAPI["⚡ FastAPI Service<br/><small>RESTful endpoints</small>"]
        WebSocket["🔄 WebSocket Server<br/><small>Real-time updates</small>"]
    end
    subgraph DashboardLayer["📊 Dashboard Layer"]
        StreamlitEngine["🚀 Streamlit Engine<br/><small>Interactive UI</small>"]
        MarketDashboard["📈 Market Analysis<br/><small>Price trends, volumes</small>"]
        SentimentDashboard["🔍 Sentiment Analysis<br/><small>Social mood tracking</small>"]
        PerformanceDashboard["⚙️ Performance Metrics<br/><small>System health</small>"]
    end
    subgraph MonitoringLayer["🔍 Monitoring & Observability Layer"]
        Prometheus["📊 Prometheus<br/><small>Metrics collection</small>"]
        Grafana["📉 Grafana Dashboards<br/><small>Visualization</small>"]
        InfluxDB[("📊 InfluxDB<br/><small>Error Metrics</small>")]
        AlertManager["🚨 Alert Manager<br/><small>Threshold monitoring</small>"]
        Notifications["📱 Notifications<br/><small>Slack/Email</small>"]
    end
    StockExchanges -->|"Market<br/>data"| KafkaConnectMarket
    SocialMedia -->|"Posts<br/>tweets"| KafkaConnectSocial
    NewsAPIs -->|"Articles<br/>headlines"| KafkaConnectSocial
    KafkaConnectMarket -->|"Stream"| KafkaTopicMarket
    KafkaConnectSocial -->|"Stream"| KafkaTopicSocial
    KafkaTopicMarket -->|"Consume"| MarketValidator
    KafkaTopicSocial -->|"Consume"| ContentValidator
    MarketValidator -->|"Valid"| ValidDataMarket
    MarketValidator -->|"Invalid"| ErrorHandler
    ContentValidator -->|"Valid"| ValidDataSocial
    ContentValidator -->|"Invalid"| ErrorHandler
    ValidDataMarket -->|"Process"| SparkMarket
    ValidDataSocial -->|"Process"| SparkSocial
    SparkMarket -->|"Extract<br/>features"| FeatureEngMarket
    FeatureEngMarket -->|"Train/predict"| DLPrediction
    SparkSocial -->|"Extract<br/>features"| FeatureEngSocial
    FeatureEngSocial -->|"Analyze"| SentimentAnalysis
    DLPrediction -->|"Store<br/>online"| Redis
    DLPrediction -->|"Archive"| Cassandra
    SentimentAnalysis -->|"Store<br/>online"| Redis
    SentimentAnalysis -->|"Archive"| Cassandra
    Redis -->|"Real-time<br/>features"| AggregationService
    Cassandra -->|"Historical<br/>patterns"| AggregationService
    AggregationService -->|"Serve<br/>predictions"| FastAPI
    FastAPI -->|"Push<br/>updates"| WebSocket
    WebSocket -->|"Real-time<br/>data"| StreamlitEngine
    StreamlitEngine -->|"Render"| MarketDashboard
    StreamlitEngine -->|"Render"| SentimentDashboard
    StreamlitEngine -->|"Render"| PerformanceDashboard
    AggregationService -->|"Metrics"| Prometheus
    FastAPI -->|"API<br/>metrics"| Prometheus
    Prometheus -->|"Visualize"| Grafana
    Prometheus -->|"Thresholds"| AlertManager
    ErrorHandler -->|"Log<br/>errors"| InfluxDB
    InfluxDB -->|"Error<br/>trends"| Grafana
    AlertManager -->|"Send<br/>alerts"| Notifications
    classDef sourcesBox fill:#e6f7ff,stroke:#0073cf,stroke-width:2px,stroke-dasharray: 5 5
    classDef ingestBox fill:#fff7e6,stroke:#f39c12,stroke-width:2px,stroke-dasharray: 5 5
    classDef validBox fill:#e6ffe6,stroke:#27ae60,stroke-width:2px,stroke-dasharray: 5 5
    classDef processBox fill:#ffe6e6,stroke:#c0392b,stroke-width:2px,stroke-dasharray: 5 5
    classDef storeBox fill:#f2e6ff,stroke:#8e44ad,stroke-width:2px,stroke-dasharray: 5 5
    classDef integrateBox fill:#e6fff2,stroke:#16a085,stroke-width:2px,stroke-dasharray: 5 5
    classDef apiBox fill:#fffde6,stroke:#d35400,stroke-width:2px,stroke-dasharray: 5 5
    classDef dashBox fill:#ffe6f0,stroke:#e74c3c,stroke-width:2px,stroke-dasharray: 5 5
    classDef monitorBox fill:#e6f0ff,stroke:#3498db,stroke-width:2px,stroke-dasharray: 5 5
    classDef sources fill:#D4F1F9,stroke:#05445E,stroke-width:1px,rx:10,ry:10
    classDef kafka fill:#FFEAD2,stroke:#CC704B,stroke-width:1px,rx:10,ry:10
    classDef validation fill:#E9FFC2,stroke:#4E6C50,stroke-width:1px,rx:10,ry:10
    classDef processing fill:#FCD1D1,stroke:#AE445A,stroke-width:1px,rx:10,ry:10
    classDef storage fill:#D8B4F8,stroke:#6528F7,stroke-width:1px,rx:10,ry:10
    classDef integration fill:#C1F4C5,stroke:#1D5D9B,stroke-width:1px,rx:10,ry:10
    classDef api fill:#F9F3CC,stroke:#DBA39A,stroke-width:1px,rx:10,ry:10
    classDef dashboard fill:#FEA1BF,stroke:#A84448,stroke-width:1px,rx:10,ry:10
    classDef monitoring fill:#D2E0FB,stroke:#7091F5,stroke-width:1px,rx:10,ry:10
    class DataSources sourcesBox
    class DataIngestion ingestBox
    class DataValidation validBox
    class ProcessingLayer processBox
    class FeatureStore storeBox
    class SignalIntegration integrateBox
    class APILayer apiBox
    class DashboardLayer dashBox
    class MonitoringLayer monitorBox
    class StockExchanges,SocialMedia,NewsAPIs sources
    class KafkaConnectMarket,KafkaConnectSocial,KafkaTopicMarket,KafkaTopicSocial kafka
    class MarketValidator,ContentValidator,ValidDataMarket,ValidDataSocial,ErrorHandler validation
    class SparkMarket,SparkSocial,FeatureEngMarket,FeatureEngSocial,DLPrediction,SentimentAnalysis processing
    class Redis,Cassandra,InfluxDB storage
    class AggregationService integration
    class FastAPI,WebSocket api
    class StreamlitEngine,MarketDashboard,SentimentDashboard,PerformanceDashboard dashboard
    class Prometheus,Grafana,AlertManager,Notifications monitoring
